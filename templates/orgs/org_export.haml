-extends "smartmin/read.html"
-load temba i18n humanize

-block title-text
  -trans "Create Export"

-block content

  .flex.w-full.mb-4.flex-wrap
    -blocktrans trimmed
      Select all of the items below that you would like to include in your export. We've grouped them
      together based on which flows and campaigns work with each other. Any related triggers will automatically
      be included in the export.

  .flex.w-full.mb-4.items-end.flex-wrap.justify-end{style:"min-height:41px"}
    %form.export.w-full(method="POST" action="{{request.get_full_path}}")
      -csrf_token
      .flex.flex-col
        -for bucket in buckets
          -with bucket_idx=forloop.counter0
            .bucket.card
              .mb-6.justify-between.bleed-x.bleed-t.bg-gray-100
                .flex.items-center.py-4.px-6
                  .flex-grow.text-xl
                    -trans "Group"
                    {{ forloop.counter|apnumber|capfirst }}
                  .bucket-select.button-light.px-3.py-2.text-base.bg-white(data-bucket="bucket{{ bucket_idx }}")
                    -trans "Select"

              .
                -for exportable in bucket
                  -with exportable_type=exportable|object_class_name|lower
                    -ifchanged exportable_type
                      .flex
                        %temba-checkbox.bucket-toggle-type(data-bucket="bucket{{ bucket_idx }}" data-type="{{ exportable_type }}" label="{{ exportable|verbose_name_plural|capfirst }}")
                    .inline-flex.pl-8(class="w-2/5")
                      %temba-checkbox(name="{{ exportable_type }}s" value="{{ exportable.id }}" data-bucket="bucket{{ bucket_idx }}" data-type="{{ exportable_type }}" label="{{ exportable.name }}")

        -if singles
          .bucket.card
            .mb-6.justify-between.bleed-x.bleed-t.bg-gray-100
              .flex.items-center.py-4.px-6
                .flex-grow.text-xl
                  -if buckets
                    -trans "Everything Else"
                  -else
                    -trans "Flows and Campaigns"

                -if buckets
                  .bucket-select.button-light.px-3.py-2.text-base.bg-white(data-bucket="singles")
                    -trans "Select"

            .
              -for exportable in singles
                -with exportable_type=exportable|object_class_name|lower
                  -ifchanged exportable_type
                    .flex
                      %temba-checkbox.bucket-toggle-type(data-bucket="singles" data-type="{{ exportable_type }}" label="{{ exportable|verbose_name_plural|capfirst }}")  
                  .inline-flex.pl-8(class="w-2/5")
                    %temba-checkbox(name="{{ exportable_type }}s" value="{{ exportable.id }}" data-bucket="singles" data-type="{{ exportable_type }}" label="{{ exportable.name }}")  

      .flex.mt-4.justify-end
        .button-light.select-all
          -trans "Select All"
        .button-primary.submit{style:"height: 100%;"}
          -trans "Export"


-block extra-script
  {{ block.super }}

  :javascript
    onSpload(function() {
      function selectExportables(bucket, type = "", checked = true) {
        var selector = 'temba-checkbox[data-bucket]';
        if (bucket) {
          selector = 'temba-checkbox[data-bucket="' + bucket + '"]';
        }
        if (type) {
          selector += '[data-type="' + type + '"]';
        }
    
        document.querySelectorAll(selector).forEach(function(checkbox) {checkbox.checked = checked;});
      }

      const preSelectFlow = document.querySelector('temba-checkbox[name="flows"][value="{{ initial_flow_id }};"]');
      const preSelectCampaign = document.querySelector('temba-checkbox[name="campaigns"][value="{{ initial_campaign_id }}"]');

      if (preSelectFlow) {
        preSelectFlow.checked = true;
        if (preSelectFlow.dataset.bucket != "singles") {
          selectExportables(preSelectFlow.dataset.bucket);
        }
      }
      if (preSelectCampaign) {
        preSelectCampaign.checked = true;
        if (preSelectCampaign.dataset.bucket != "singles") {
          selectExportables(preSelectCampaign.dataset.bucket);
        }
      }

      // handles clicking a type within a bucket
      document.querySelectorAll('.bucket-toggle-type').forEach(function(el) {
        el.addEventListener("click", function(event) {
          selectExportables(event.target.dataset.bucket, event.target.dataset.type, event.target.checked);
        });
      });
  
      // handles clicking the select button for a bucket
      document.querySelectorAll('.bucket-select').forEach(function(el) {
        el.addEventListener("click", function(event) {
          selectExportables(event.target.dataset.bucket);
        });
      });

      // handles clicking select all button
      document.querySelector(".select-all").addEventListener("click", function(event) {
        selectExportables();
      });

      document.querySelector(".export .submit").addEventListener("click", function(event) {
        document.querySelector('form.export').submit();
      });
    });
