-extends "smartmin/read.html" 

-load smartmin sms contacts compress temba channels
-load i18n humanize

-block buttons

-block page-title
  {{contact|name_or_urn:user_org|default:"Contact Details"}}

-block spa-title
  #title-text.hidden
    {{title}}    
  %temba-contact-name-fetch(contact="{{object.uuid}}" -temba-refreshed="handleContactRefreshed" showLoading)      

-block subtitle

-block read-buttons

-block content
  %temba-tabs.flex-grow.-mt-2(-temba-context-changed="handleTabChanged" index="{{request.GET.tab}}" collapses="true")
    %temba-tab(icon="message" name='{{_("Chat")|escapejs}}')
      .flex.flex-grow.flex-col.overflow-y-auto(style="border-top-right-radius: var(--curvature);")
        %temba-contact-chat(contact="{{object.uuid}}" monitor="true")

    %temba-tab(icon="info" name='{{_("Details")|escapejs}}')
      %temba-contact-details.p-4.overflow-y-auto(contact="{{object.uuid}}")

    %temba-tab(icon="fields" name='{{_("Fields")|escapejs}}')
      .flex.flex-grow.flex-col.p-4.overflow-y-auto(style="border-top-right-radius: var(--curvature);")
        %temba-contact-fields.featured-fields.pb-1(timezone="{{object.org.timezone}}" contact="{{object.uuid}}" featured="true" -temba-button-clicked="handleFieldSearch")
        %temba-contact-fields.all-fields(timezone="{{object.org.timezone}}" contact="{{object.uuid}}" -temba-button-clicked="handleFieldSearch")
          .no-fields.p-16.text-center(slot="empty")
            .text-xl.mb-4
              -trans "No Fields"

            -blocktrans trimmed
              Nothing to see here yet. Create a new field to save data to your contacts.

    %temba-tab(icon="campaign" name='{{_("Next Up")|escapejs}}' hidden="true")
      .flex.flex-grow.flex-col.p-4.overflow-y-auto(style="border-top-right-radius: var(--curvature);")
        %temba-contact-pending(contact="{{object.uuid}}" -temba-refreshed="handlePendingRefreshed" -temba-selection="handlePendingClicked")

    %temba-tab(icon="tickets" name='{{_("Tickets")|escapejs}}' hidden="true") 
      .flex.flex-grow.flex-col.overflow-y-auto(style="border-top-right-radius: var(--curvature);")
        %temba-contact-tickets.m-4(agent="{{user.email}}" contact="{{object.uuid}}" -temba-refreshed="handleTicketsRefreshed" clickable="true" -temba-button-clicked="handleTicketClicked")

-block extra-less
  -compress css

    :css
      .urn-link {
        display: inline-block;
      }

      .page-content {
        align-self: auto;
        max-width: 1024px;
      }

    {% lessblock %}
      :plain
        table.history, table.upcoming {
          .glyph {
            font-size: 14px;
            line-height: 16px;
            padding-left: 5px;

            &.icon-flow {
              font-size: 18px;
              padding-left: 2px;
            }
          }
        }

        .show-all {
          margin-top:0px;
          margin-right:10px;
          color: #d1d1d1;

          &.expanded {
            .icon-arrow-down {
              .rotate(2);
            }
          }
          .icon-arrow-down {
            margin-top:2px;
            margin-right: 3px;
          }

          &:hover {
            color: #c1c1c1;
            cursor: pointer;
          }
        }

        .flow-event-display-selector {
          a {
              display: inline-block;
              &.is-active {
                cursor: none;
                color: #999999;
                cursor: text;
                text-decoration: none;
              }
            }
          }

        table.list {

          tr.archive-note {
            border-bottom: none;
            text-align: center;
            color: #666;
            font-size: 90%;

            td {
              padding: 10px;
            }
          }

          tr.since {
            border-bottom: none;
            td {
              text-align:center;
              border-top: 1px solid @color-bg-grey + #555;
              padding-top:15px;

              .date {
                border:0px solid red;
              }

              .btn {
                margin-top:15px;
              }
            }
          }

          tr.end-call {
            background: #ddd;
            color: #000;
            td {
              text-align:center;
              padding: 5px;
            }
          }

          &.upcoming {
            color: #bbb;

            tr.non-msg {
              background: inherit;
            }

            .icon {
              .glyph.icon-bubble-right, .glyph.icon-flow {
                color: #bbb;
              }
              text-align:center;
            }

            a {
              color: #bbb;
            }
          }

          tr {
            &.msg {
              td.icon {
                .icon-bubble-right, .icon-bubble-check, .icon-bullhorn, .icon-call-outgoing {
                  color: @color-status-green;
                }

                .icon-bubble-user, .icon-call-incoming {
                  color: @color-primary;
                }

                .icon-bubble-notification {
                  color: @color-status-failed;
                }
              }
            }

            &.detail-event {
              display: table-row;
            }

            &.non-msg {
              background: #fafafa;

              &.skipped {
                background: #fafafa;
              }

              &.new-session {
                background: #f0f0f0;
              }

              .icon {
                color: rgba(0, 0, 0, 0.20);
              }
            }
          }

          &.summary-events-only {
            tbody {
              tr.detail-event {
                display: none;
              }
            }
          }

          td {
            vertical-align:middle;

            &.icon {
              text-align: center;

              .glyph {
                color: rgba(0,0,0,.20);
              }
            }

            b {
              color: #666
            }
          }

          .created_on {
            font-size:13px;
            line-height:13px;
            border: 0px solid;
            text-align:right;
            min-width: 150px;
            
            .time {
              margin-right: 0px;
            }

            .repeats {
              font-size:90%;
            }
          }

          .details {
            border: 0px solid;
            padding: 14px;

            .summary {
              font-size:11px;
              font-weight:500;
              line-height:10px;
              color: @flat-grey;
            }
          }
        }

        .contact-urn {
          display: inline-block;
          margin-right: 10px;

          .glyph {
            margin-right: 3px;
          }
        }

    {% endlessblock %}

-block extra-script
  :javascript

    var idxChat = 0;
    var idxInfo = 1;
    var idxFields = 2;
    var idxPending = 3;
    var idxTickets = 4;

    function contactUpdated(evt) {
      var details = document.querySelector("temba-contact-details");
      details.refresh();
    }

    function handlePendingRefreshed(evt) {
      var pendingEvents = evt.detail.data;
      
      var tabs = document.querySelector("temba-tabs");
      var pendingTab = tabs.getTab(idxPending);
      pendingTab.count = pendingEvents.length;
      pendingTab.hidden = pendingTab.count == 0;
      tabs.requestUpdate();
    }

    function handleContactRefreshed(evt) {
      var contact = evt.detail.data;
      var tabs = document.querySelector("temba-tabs");

      // update our set field count
      var fields = Object.keys(contact.fields).filter(function (key) {
        return !!contact.fields[key]
      });

      var fieldTab = tabs.getTab(idxFields);
      fieldTab.count = fields.length;

      // render our tabs
      tabs.requestUpdate();

      var store = document.querySelector("temba-store");
      
      var featured = document.querySelector(".featured-fields");
      var all = document.querySelector(".all-fields");

      var featuredCount = store.getFeaturedFields().length;
      var fieldCount = Object.keys(contact.fields).length;
      
      if (all) {
        all.classList.toggle("hidden", featuredCount > 0 && fieldCount-featuredCount == 0);
      }

      // if our contact refreshes, refresh our pendingEvents
      var pending = document.querySelector("temba-contact-pending");
      if (pending) {
        pending.refresh();
      }

      var menu = document.querySelector("temba-menu");
      if (menu) {
        menu.refresh();
      }
    }

    function handleTicketsRefreshed(evt) {
      var openTickets = evt.detail.data.filter(function (ticket) { 
        return ticket.status == "open"
      });      
      
      var tabs = document.querySelector("temba-tabs");
      var ticketsTab = tabs.getTab(idxTickets);
      ticketsTab.count = openTickets.length;
      ticketsTab.hidden = evt.detail.data == 0;
      tabs.requestUpdate();

    }

    function handleTabChanged() {
      var tab = document.querySelector("temba-tabs").index;
      window.history.replaceState({ url:"{% url 'contacts.contact_read' object.uuid %}", show: window.location.pathname + "?tab=" + tab }, "", "?tab=" + tab);
    }

    function handleFieldSearch(evt) {
      fetchURL("/contact/?search=" + encodeURIComponent(evt.detail.key) + "+%3D+" + encodeURIComponent("\"" + evt.detail.value + "\""))
    }

    function handleTicketClicked(evt) {
      var ticket = evt.detail.ticket;
      gotoURL("/ticket/all/" + ticket.status + "/" + ticket.uuid + "/");
    }

    function handlePendingClicked(evt) {
      var pending = evt.detail;
      
      if (pending.type == "campaign_event") {
        gotoURL("/campaign/read/" + pending.campaign.uuid + "/");
      } else {
        gotoURL("/broadcast/scheduled/");
      }
    }